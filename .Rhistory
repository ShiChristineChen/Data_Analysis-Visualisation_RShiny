plot(x,
0.5* dnorm(x,0,2),
pch=21,
col="red",
cex=0.3,
lwd = 2,
type= "l",
xlab = "x",
ylab = "π",
main = "Conditional densities multiplied by prior probabilities")
points(x,
05 * dnorm(x,1,1),
pch=21,
col="blue",
cex=0.3,
lwd = 2,
type="l")
## Error rate
legend("topright",
legend = c("π0f(x|y=0)", "π1f(x|Y=1)"),
col = c("red","blue"),
pch = 0.5,
xjust = 1,
text.col = "black",
text.width = 3.5,
horiz = FALSE)
# Assignment 1 Q2 plot
x = seq(-7,7,length=100)
plot(x,
dnorm(x,0,2),
pch=21,
col="red",
cex=0.3,
lwd = 2,
type= "l",
xlab = "x",
ylab = "π",
main = "Conditional densities multiplied by prior probabilities")
points(x,
dnorm(x,1,1),
pch=21,
col="blue",
cex=0.3,
lwd = 2,
type="l")
# Assignment 1 Q2 plot
x = seq(-7,7,length=100)
plot(x,
dnorm(x,1,1),
pch=21,
col="blue",
cex=0.3,
lwd = 2,
type="l",
main = "Conditional densities multiplied by prior probabilities")
points(x,
dnorm(x,0,2),
pch=21,
col="red",
cex=0.3,
lwd = 2,
type= "l")
points(x,
dnorm(x,0,2),
pch=21,
col="red",
cex=0.3,
lwd = 2,
type= "l")
# Assignment 1 Q2 plot
x = seq(-7,7,length=100)
plot(x,
dnorm(x,1,1),
pch=21,
col="blue",
cex=0.3,
lwd = 2,
type="l",
main = "f(x)")
points(x,
dnorm(x,0,2),
pch=21,
col="red",
cex=0.3,
lwd = 2,
type= "l")
p3=pnorm(7,0,2)
p3
##Error rate
p1=pnorm(-0.1809,1,1)
p2_1=pnorm(2.8475,0,2)
p2_2=pnorm(-0.1809,0,2)
p3=1-pnorm(2.8475,1,1)
error_rate = 0.5*p1+0.5*(P2_1-P2_2)+0.5*p3
error_rate
##Error rate
p1<-pnorm(-0.1809,1,1)
p2_1<-pnorm(2.8475,0,2)
p2_2<-pnorm(-0.1809,0,2)
p3<-1-pnorm(2.8475,1,1)
error_rate <- 0.5*p1+0.5*(P2_1-P2_2)+0.5*p3
error_rate
error_rate<- 0.5*p1+0.5*(P2_1-P2_2)+0.5*p3
error_rate
##Error rate
p1<-pnorm(-0.1809,1,1)
p2_1<-pnorm(2.8475,0,2)
p2_2<-pnorm(-0.1809,0,2)
p3<-1-pnorm(2.8475,1,1)
error_rate<- 0.5*p1+0.5*(P2_1-P2_2)+0.5*p3
error_rate
##Error rate
p1<-pnorm(-0.1809,1,1)
p2_1<-pnorm(2.8475,0,2)
p2_2<-pnorm(-0.1809,0,2)
p3<-1-pnorm(2.8475,1,1)
error_rate<- 0.5*p1+0.5*(p2_1-p2_2)+0.5*p3
error_rate
# Two classes plot
x = seq(-7,7,length=100)
plot(x,
dnorm(x,1,2),
pch=21,
col="blue",
cex=0.3,
lwd = 2,
type="l",
main = "f(x)")
points(x,
dnorm(x,0,2),
pch=21,
col="red",
cex=0.3,
lwd = 2,
type= "l")
# Two classes plot
x = seq(-7,7,length=100)
plot(x,
dnorm(x,1,1),
pch=21,
col="blue",
cex=0.3,
lwd = 2,
type="l",
main = "f(x)")
points(x,
dnorm(x,0,1),
pch=21,
col="red",
cex=0.3,
lwd = 2,
type= "l")
##Error rate
p1<-pnorm(0.5,1,1)
p2<-1-pnorm(0.5,0,1)
error_rate<- 0.5*p1+0.5*p2
error_rate
##Error rate
p1<-pnorm(0.5,1,2)
p2<-1-pnorm(0.5,0,2)
error_rate<- 0.5*p1+0.5*p2
error_rate
##Error rate
p1<-pnorm(0.5,1,1)
p2<-1-pnorm(0.5,0,1)
error_rate<- 0.5*p1+0.5*p2
error_rate
install.packages("Tidyverse")
library("tidyverse")
library("tidyverse")
?tydyverse
install.packages("tidyverse")
library("tidyverse")
??tydyverse
??tidyverse
gcd = function (x, y){
ifelse(x %% y == 0, y, gcd(y, x %% y))
}
gcd(10, 9)
gcd(13, 2)
gcd(15, 2)
gcd(15, 4)
gcd = function (x, y){
ifelse(x %% y == 0, y, gcd(y, x %% y))
}
gcd(15, 4)
gcd(16, 4)
gcd(17, 4)
devtools::install_github("rstudio/shinyapps")
devtools::install_github("rstudio/shinyapps")
remotes::install_github("rstudio/shinyapps")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sch4052020', token='CAF96A3EEC1024BFDC5B4B5ABAF15E2A', secret='Cc/frkQ8dslHWZO4H0w/X8FG+nsuUQtFCEq/mpYA')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
devtools::install_github("rstudio/shinyapps")
rsconnect::deployApp('rstudio/shinyapps')
library(rsconnect)
rsconnect::deployApp("https://sch4052020.shinyapps.io")
install.packages(c('ggplot2', 'shiny'))
setwd("~/Desktop/Assignment1")
shiny::runApp()
runApp()
install.packages("XQuartz")
install.packages("readr")
install.packages(c("corrgram", "forecast", "ggplot2", "janeaustenr", "leaflet", "pls", "RColorBrewer", "reshape2", "shiny", "shinyjs", "stringr", "tidytext", "tidyverse", "vcd", "visdat", "visNetwork", "wordcloud2"))
install.packages(c("dplyr", "DT", "GGally", "ggplot2", "vcd"))
shiny::runApp('~/OneDrive - University of Canterbury/Attachments/UC/semester_2/DATA423 Industry/Visualisation-20200722/Visualising dataset example/Assignment1_Visualising dataset')
install.packages("XQuartz")
View(data)
View(data)
runApp('~/Desktop/Assignment1')
my_data<-data.frame(seq(1:300), data)
fix(my_data)
install.packages("XQuartz")
fix(my_data)
as.matrix(my_data)
a<-as.data.frame(my_data)
fix(a)
dim(a)
fix(data)
shiny::runApp('~/OneDrive - University of Canterbury/Attachments/UC/semester_2/DATA423 Industry/Visualisation-20200722/Visualising dataset example')
? choice
?choose.files
?choose.files()
?choose.files
?hr()
runApp('~/OneDrive - University of Canterbury/Attachments/UC/semester_2/DATA423 Industry/Visualisation-20200722/Visualising dataset example')
install.packages("shinyjs")
install.packages("igraph")
runApp()
library(shinyjs)
library(shiny)
library(vcd)
library(MASS)
library(RColorBrewer)
library(datasets)
library(corrgram)
library(visdat)
library(forecast)
library(tidytext)
library(tidyverse)
library(janeaustenr)
library(stringr)
library(wordcloud2)
library(reshape2)
library(pls)
library(ggplot2)
#library(tabplot)  # WARNING:  This may not install as CRAN is withdrawing tabplot due to maintenance "issues"
library(visNetwork)
library(leaflet)
#install.packages("XQuartz")
input_data <- read.table("Ass1Data.csv", header=T, sep = ",")
data_frame_car <- data.frame(seq = seq(1:300), input_data)
data_frame_car$Date <- as.Date(data_frame_car$Date, "%Y-%m-%d")
data_frame_car$Author <- as.factor(data_frame_car$Date)
data_frame_car$Priority <- factor(data_frame_car$Priority, levels = c("Low","Medium","High"))
data_frame_car$Price <- factor(data_frame_car$Price, levels = c("Cheap","Chostly","Extravagant"))
data_frame_car$Speed <- factor(data_frame_car$Speed, levels = c("Slow","Medium","Fast"))
data_frame_car$Duration <- factor(data_frame_car$Duration, levels = c("Short","Long","Very Long"))
data_frame_car$Temp <- factor(data_frame_car$Temp, levels = c("Cold","Warm","Hot"))
data_frame_car$Location <- as.factor(data_frame_car$Location)
data_frame_car$Agreed <- as.factor(data_frame_car$Duration)
data_frame_car$Class <- as.factor(data_frame_car$Class)
data_frame_car$Surface <- as.factor(data_frame_car$Surface)
cor_variables <- data_frame_car[16, 17,18]
numeric_dataset <- cbine(data_frame_car[2],data_frame_car[16:45])
numeric_dataset <- cbind(data_frame_car[2],data_frame_car[16:45])
runApp()
runApp()
library(shinyjs)
library(shiny)
library(vcd)
library(MASS)
library(RColorBrewer)
library(datasets)
library(corrgram)
library(visdat)
library(forecast)
library(tidytext)
library(tidyverse)
library(janeaustenr)
library(stringr)
library(wordcloud2)
library(reshape2)
library(pls)
library(ggplot2)
#library(tabplot)  # WARNING:  This may not install as CRAN is withdrawing tabplot due to maintenance "issues"
library(visNetwork)
library(leaflet)
#install.packages("XQuartz")
input_data <- read.table("Ass1Data.csv", header=T, sep = ",")
data_frame_car <- data.frame(seq = seq(1:300), input_data)
data_frame_car$Date <- as.Date(data_frame_car$Date, "%Y-%m-%d")
data_frame_car$Author <- as.factor(data_frame_car$Date)
data_frame_car$Priority <- factor(data_frame_car$Priority, levels = c("Low","Medium","High"))
data_frame_car$Price <- factor(data_frame_car$Price, levels = c("Cheap","Chostly","Extravagant"))
data_frame_car$Speed <- factor(data_frame_car$Speed, levels = c("Slow","Medium","Fast"))
data_frame_car$Duration <- factor(data_frame_car$Duration, levels = c("Short","Long","Very Long"))
data_frame_car$Temp <- factor(data_frame_car$Temp, levels = c("Cold","Warm","Hot"))
data_frame_car$Location <- as.factor(data_frame_car$Location)
data_frame_car$Agreed <- as.factor(data_frame_car$Duration)
data_frame_car$Class <- as.factor(data_frame_car$Class)
data_frame_car$Surface <- as.factor(data_frame_car$Surface)
cor_variables <- data_frame_car[16, 17,18]
numeric_dataset <- cbind(data_frame_car[2],data_frame_car[16:45])
library(shinyjs)
library(shiny)
library(vcd)
library(MASS)
library(RColorBrewer)
library(datasets)
library(corrgram)
library(visdat)
library(forecast)
library(tidytext)
library(tidyverse)
library(janeaustenr)
library(stringr)
library(wordcloud2)
library(reshape2)
library(pls)
library(ggplot2)
#library(tabplot)  # WARNING:  This may not install as CRAN is withdrawing tabplot due to maintenance "issues"
library(visNetwork)
library(leaflet)
input_data <- read.table("Ass1Data.csv", header=T, sep = ",")
data_frame_car <- data.frame(seq = seq(1:300), input_data)
data_frame_car$Date <- as.Date(data_frame_car$Date, "%Y-%m-%d")
data_frame_car$Author <- as.factor(data_frame_car$Date)
data_frame_car$Priority <- factor(data_frame_car$Priority, levels = c("Low","Medium","High"))
data_frame_car$Price <- factor(data_frame_car$Price, levels = c("Cheap","Chostly","Extravagant"))
data_frame_car$Speed <- factor(data_frame_car$Speed, levels = c("Slow","Medium","Fast"))
data_frame_car$Duration <- factor(data_frame_car$Duration, levels = c("Short","Long","Very Long"))
data_frame_car$Temp <- factor(data_frame_car$Temp, levels = c("Cold","Warm","Hot"))
data_frame_car$Location <- as.factor(data_frame_car$Location)
data_frame_car$Agreed <- as.factor(data_frame_car$Duration)
data_frame_car$Class <- as.factor(data_frame_car$Class)
data_frame_car$Surface <- as.factor(data_frame_car$Surface)
cor_variables <- data_frame_car[16, 17,18]
numeric_dataset <- cbind(data_frame_car[2],data_frame_car[16:45])
runApp()
data_frame_car$Priority <- factor(data_frame_car$Priority, levels = c("Low","Medium","High"))
library(shinyjs)
library(shiny)
library(vcd)
library(MASS)
library(RColorBrewer)
library(datasets)
library(corrgram)
library(visdat)
library(forecast)
library(tidytext)
library(tidyverse)
library(janeaustenr)
library(stringr)
library(wordcloud2)
library(reshape2)
library(pls)
library(ggplot2)
#library(tabplot)  # WARNING:  This may not install as CRAN is withdrawing tabplot due to maintenance "issues"
library(visNetwork)
library(leaflet)
#install.packages("XQuartz")
input_data <- read.table("Ass1Data.csv", header=T, sep = ",")
data_frame_car <- data.frame(seq = seq(1:300), input_data)
data_frame_car$Date <- as.Date(data_frame_car$Date, "%Y-%m-%d")
data_frame_car$Author <- as.factor(data_frame_car$Date)
data_frame_car$Priority <- factor(data_frame_car$Priority, levels = c("Low","Medium","High"))
data_frame_car$Price <- factor(data_frame_car$Price, levels = c("Cheap","Chostly","Extravagant"))
data_frame_car$Speed <- factor(data_frame_car$Speed, levels = c("Slow","Medium","Fast"))
data_frame_car$Duration <- factor(data_frame_car$Duration, levels = c("Short","Long","Very Long"))
data_frame_car$Temp <- factor(data_frame_car$Temp, levels = c("Cold","Warm","Hot"))
data_frame_car$Location <- as.factor(data_frame_car$Location)
data_frame_car$Agreed <- as.factor(data_frame_car$Duration)
data_frame_car$Class <- as.factor(data_frame_car$Class)
data_frame_car$Surface <- as.factor(data_frame_car$Surface)
cor_variables <- data_frame_car[16, 17,18]
numeric_dataset <- cbind(data_frame_car[2],data_frame_car[16:45])
runApp()
runApp()
data_frame_car
glimse(data_frame_car)
glimpse(data_frame_car)
runApp()
?vis_miss()
shiny::runApp('~/OneDrive - University of Canterbury/Attachments/UC/semester_2/DATA423 Industry/Visualisation-20200722/Visualising dataset example')
shiny::runApp()
shiny::runApp()
View(data_frame_car)
data_frame_car$Author <- as.factor(data_frame_car$Author)
View(data_frame_car)
shiny::runApp()
View(data_frame_car)
View(data_frame_car)
View(data_frame_car)
View(data_frame_car)
runApp()
install.packages("shinyjs")
shiny::runApp()
data_frame_car <- read.csv("Ass1Data.csv", header=T, sep = ",")
data_frame_car <- read.csv("Ass1Data.csv", header=T, sep = ",")
print(rownames(data_frame_car))
runApp()
install.packages("shinyjs")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data_frame_car)
runApp()
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
pairs_set <- data_frame_car[,c(1,15:25)]
pairs_set2 <- data_frame_car[,c(1,26:35)]
pairs_set3 <- data_frame_car[,c(1,36:44)]
pairs_set4 <- data_frame_car[,c(1,3:14)]
choicesB <- c(pairs_set, pairs_set2, pairs_set3, pairs_set4)
runApp()
runApp()
View(data_frame_car)
View(data_frame_car)
runApp()
shiny::runApp()
View(data_frame_car)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
?as.Date
?Date
runApp()
View(data_frame_car)
View(data_frame_car)
View(data_frame_car)
??as.Date
runApp()
runApp()
choicesB <- colnames(pairs_set)
choicesB
runApp()
data_frame_car[,'Y']
shiny::runApp()
shiny::runApp()
View(choicesC)
runApp()
View(choicesC)
View(choiceC)
runApp()
View(choicesC)
runApp()
runApp()
View(colname_pairs_set)
View(choicesC)
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
library(skimr)
shiny::runApp()
View(data_frame_car)
View(data_frame_car)
runApp()
shiny::runApp()
shiny::runApp()
